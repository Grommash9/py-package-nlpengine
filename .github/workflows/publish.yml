name: Build and upload to PyPI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
  release:
    types:
      - published

jobs:
  build_wheels:
    name: Build wheels on Linux
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: vcpkg Install
        run: |
          git clone --depth 1 https://github.com/Microsoft/vcpkg.git
          ./vcpkg/bootstrap-vcpkg.sh
          ./vcpkg/vcpkg install --debug icu

      - name: Install autoconf-archive
        run: sudo apt-get install -y autoconf-archive

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
          CIBW_CONFIG_SETTINGS: "cmake.args=-DCMAKE_TOOLCHAIN_FILE='./vcpkg/scripts/buildsystems/vcpkg.cmake'"

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-ubuntu-latest
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

#  upload_pypi:
#    needs: [build_wheels, build_sdist]
#    runs-on: ubuntu-latest
#    environment: pypi
#    permissions:
#      id-token: write
#    if: github.event_name == 'release' && github.event.action == 'published'
#    # or, alternatively, upload to PyPI on every tag starting with 'v' (remove on: release above to use this)
#    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
#    steps:
#      - uses: actions/download-artifact@v4
#        with:
#          # unpacks all CIBW artifacts into dist/
#          pattern: cibw-*
#          path: dist
#          merge-multiple: true
#      - uses: pypa/gh-action-pypi-publish@release/v1
#        with:
#          # To test: repository-url: https://test.pypi.org/legacy/
